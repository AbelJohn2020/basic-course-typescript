(()=>{"use strict";var e={987:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Album=void 0;const r=i(123);class s extends r.Item{constructor(e,t){super(e,t),this.picture=[]}addPicture(e){this.picture.push(e)}}t.Album=s},123:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Item=void 0,t.Item=class{constructor(e,t){this.id=e,this.title=t}}},677:(e,t)=>{var i;Object.defineProperty(t,"__esModule",{value:!0}),t.PhotoOrientation=void 0,(i=t.PhotoOrientation||(t.PhotoOrientation={}))[i.Landscape=0]="Landscape",i[i.Portrait=1]="Portrait",i[i.Square=2]="Square",i[i.Panorama=3]="Panorama"},449:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Picture=void 0;const r=i(123);class s extends r.Item{constructor(e,t,i,r){super(e,t),this._date=i,this._orientation=r}toString(){return`[\n            id: ${this.id},\n            title: ${this.title},\n            date: ${this._date},\n            ortientarion: ${this._orientation},\n        ]`}}t.Picture=s},536:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.User=void 0,t.User=class{constructor(e,t,i,r){this.id=e,this.username=t,this.firstName=i,this.isPro=r,this.album=[]}addAlbum(e){this.album.push(e)}removeAlbum(e){const t=this.album.findIndex((t=>t.id===e.id));let i;return t>=0&&(i=this.album[t],this.album.splice(t,1)),i}}}},t={};function i(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,i),o.exports}(()=>{const e=i(987),t=i(677),r=i(449),s=new(i(536).User)(1,"Regulus2021","Regulus",!0),o=new e.Album(10,"Traveling to Russia"),n=new r.Picture(1,"My first day in Moscu","2024-02-08",t.PhotoOrientation.Landscape);s.addAlbum(o),o.addPicture(n),console.log("user",s),s.removeAlbum(o),console.log("user",s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,